# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/emrdb
spring.datasource.username=emr_user
spring.datasource.password=emr_password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration - Let Hibernate create tables from your entities
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# SQL Initialization - Only run data insertion AFTER Hibernate creates tables
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:init.sql
spring.jpa.defer-datasource-initialization=true

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Security - Keycloak URLs for local development
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8081/realms/emr
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8081/realms/emr/protocol/openid-connect/certs

# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000

# Application Info
spring.application.name=emr-backend

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.haykal.emr=INFO