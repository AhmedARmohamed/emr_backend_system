services:
  # PostgreSQL Database for EMR Application
  postgres:
    image: postgres:15-alpine
    container_name: emr-postgres
    environment:
      POSTGRES_DB: emrdb
      POSTGRES_USER: emr_user
      POSTGRES_PASSWORD: emr_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Removed the init.sql mount - let Spring Boot handle initialization
    networks:
      - emr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U emr_user -d emrdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database for Keycloak
  keycloak-postgres:
    image: postgres:15-alpine
    container_name: emr-keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - emr-network
    restart: unless-stopped

  # Keycloak for OAuth2/OIDC
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: emr-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    command:
      - start-dev
    ports:
      - "8081:8080"
    depends_on:
      - keycloak-postgres
    networks:
      - emr-network
    restart: unless-stopped

volumes:
  postgres_data:
  keycloak_postgres_data:

networks:
  emr-network:
    driver: bridge